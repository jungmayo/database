#날짜 : 2024.07.03
#이름 : 정지현
#내용 : 4장 SQL 고급

#실습 4-1
create table `member` (
`uid`   varchar(10) primary key,
`name`  varchar(10)not null,
`hp`	char(13) unique not null,
`pos` 	varchar(10) default '사원' not null,
`dep` 	tinyint,
`rdate` datetime not null
);
create table `department` (
`depNo` tinyint primary key,
`name` 	varchar(10) not null,
`tel` 	varchar(12) not null
);
create table `sales` (
`seq` 	int primary key auto_increment,
`uid` 	varchar(10) not null,
`year`	year not null,
`month` tinyint not null,
`sale`  int
);

#실습 4-2
insert into `member` values ('a101','박혁거세','010-1234-1001','부장','101','2020-11-19 11:39:48');
insert into `member` values ('a102','김유신','010-1234-1002','차장','101','2020-11-19 11:39:48');

insert into `member` (`uid`,`name`,`hp`,`dep`,`rdate`) values ('a103','김춘추','010-1234-1003','101','2020-11-19 11:39:48');

insert into `member` values ('a104','장보고','010-1234-1004','대리','102','2020-11-19 11:39:48');
insert into `member` values ('a105','강감찬','010-1234-1005','과장','102','2020-11-19 11:39:48');
insert into `member` values ('a106','이성계','010-1234-1006','차장','103','2020-11-19 11:39:48');

insert into `member` values ('a107','정철','010-1234-1007','차장','103','2020-11-19 11:39:48');
insert into `member` values ('a108','이순신','010-1234-1008','부장','104','2020-11-19 11:39:48');
insert into `member` values ('a109','허균','010-1234-1009','부장','104','2020-11-19 11:39:48');

insert into `member` (`uid`,`name`,`hp`,`dep`,`rdate`) values ('a110','정약용','010-1234-1010','105','2020-11-19 11:39:48');
insert into `member` (`uid`,`name`,`hp`,`dep`,`rdate`) values ('a111','박지원','010-1234-1011','105','2020-11-19 11:39:48');

insert into `department` values ('101', '영업1부',  '051-512-1001');
insert into `department` values ('102', '영업2부',  '051-512-1002');
insert into `department` values ('103', '영업3부',  '051-512-1003');
insert into `department` values ('104', '영업4부',  '051-512-1004');
insert into `department` values ('105', '영업5부',  '051-512-1005');
insert into `department` values ('106', '영업지원부','051-512-1006');
insert into `department` values ('107', '인사부',   '051-512-1007');

insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a101', '2018', '1',  '98100');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a102', '2018', '1', '136000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a103', '2018', '1',  '80100');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a104', '2018', '1',  '78000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a105', '2018', '1',  '93000');

insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a101', '2018', '2',  '23500');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a102', '2018', '2', '126000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a103', '2018', '2',  '18500');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a105', '2018', '2',  '19000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a106', '2018', '2',  '53000');

insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a101', '2019', '1',  '24000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a102', '2019', '1', '109000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a103', '2019', '1', '101000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a104', '2019', '1',  '53500');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a107', '2019', '1',  '24000');

insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a102', '2019', '2', '160000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a103', '2019', '2', '101000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a104', '2019', '2',  '43000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a105', '2019', '2',  '24000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a106', '2019', '2', '109000');

insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a102', '2020', '1', '201000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a104', '2020', '1',  '63000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a105', '2020', '1',  '74000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a106', '2020', '1', '122000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a107', '2020', '1', '111000');

insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a102', '2020', '2', '120000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a103', '2020', '2',  '93000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a104', '2020', '2',  '84000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a105', '2020', '2', '180000');
insert into `sales` (`uid`,`year`,`month`,`sale`) values ('a108', '2020', '2',  '76000');

#실습 4-3
select *from `member` where `name`='김유신';
select *from `member` where `pos` = '차장' and `dep`=101;
select *from `member` where `pos` = '차장' or `dep`=101;
select *from `member` where `name` <> '김춘추';
select *from `member` where `pos` in ('사원','대리'); #or와 동일 #괄호로 묶기
select *from `member` where `name` like '%신'; #이름이 신으로 끝나는 직원 조회
select *from `member` where `name` like '정_';
select *from `member` where `name` like '김%';
select *from `member` where `dep` in (101,102,103);
select *from `member` where `name` like '_성_';
select *from `sales` where `sale` > 50000;
select *from `sales` where `sale` >= 50000 and `sale` < 100000 and `month`=1; #모든조건에 일치하는 값 출력
select *from `sales` where `sale` between 50000 and 100000;
select *from `sales` where `sale` not between 50000 and 100000;
select *from `sales` where `year` in(2020);
select *from `sales` where `month` in(1,2);

#실습 4-4
select *from `sales` order by `sale`; #select *from `sales`만 출력하면 기본키값으로 정렬됨 / 뒤에 ASC가 생략되어있음
select *from `sales` order by `sale` asc;
select *from `sales` order by `sale` desc;
select * from `sales` 
where `sale` > 50000
order by `year` desc ,`month` desc ,`sale` asc; #year과 month는 내림차순, sale은 오름차순으로 표기됨
#실습 4-5
select *from `sales` limit 3;
select *from `sales` limit 0,3; #0은 인덱스, 3은 사이즈
select *from `sales` limit 1,2;
select *from `sales` limit 5,3;
select *from `sales` order by `sale` desc limit 3,5;
select *from `sales` where `sale` < 50000 order by `sale` desc limit 3;
select *from `sales`
where `sale` > 50000
order by `year`,`month`,`sale` desc;

#실습 4-6
select sum(`sale`) as `합계` from `sales`;
select count(*) as `갯수` from `sales`; # 모든 데이터의 갯수
select concat('hello','world') as `결과`;
select concat(`uid`,`name`,`hp`) from `member` where `uid`='a108';
select now();
insert into `member` values ('a112','유관순','010-1234-1012','대리','107',now());
select *from `member`;

#실습 4-7
# 2018년 1월 매출의 총합
select sum(`sale`) as `2018년 1월 매출의 총합` 
from `sales` where `year` = 2018 and `month` = 1



#실습 4-8
# 2월달 5만원 이상 평균
select sum(`sale`) as `총합`, avg(`sale`) as `평균` 
from `sales` where `sale` >=50000 and `year` in (2019) and `month` in(2);

#2020년 전체 매출 가운데 최저, 최고 매출
select *from `sales` where `year` in (2020) order by `sale` desc limit 1;
select *from `sales` where `year` in (2020) order by `sale` asc limit 1;
#실습 4-9
#2020년 전체 매출 가운데 최저, 최고 매출
select
	min(`sale`) as `최저매출`,
    max(`sale`) as `최고매출`
from `sales` where `year`=2020;
#실습 4-10

SET SESSION sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
select *from `sales` group by `uid`;

#실습 4-11
#실습 4-12
#실습 4-13
#실습 4-14
#실습 4-15
#실습 4-16
#실습 4-17

select sum(`sale`) as `2018년 1월 매출 총합`
from `sales` where `year`=2018 and `month`=1;